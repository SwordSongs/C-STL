#include <iostream>#include <unordered_set>#include <unordered_map>#include <numeric>using namespace std;#define PRINT     for (auto &elem : coll) \                  {  \                      cout << elem << " ";\                  } \                  cout << endl;#define PRINT2     for (auto &elem : coll2) \                  {  \                      cout << elem << " ";\                  } \                  cout << endl;int main(){       //create and initialize unordered set    unordered_set<int> coll = { 1, 2, 3, 5, 7, 11, 13, 17, 19, 77};    //print elements    PRINT    //insert some additional elements    //might cause rehashing and create different order     coll.insert({-7, 17, 33, -11, 17, 19, 1, 13});    PRINT    //remove element with specific value    coll.erase(33);    PRINT    //insert sum of all existing values    coll.insert(accumulate(coll.begin(), coll.end(), 0));    PRINT    //check if value 19 is in the set    if (coll.find(19) != coll.end())    {        cout << "19 is available." << endl;    }    //remove all negative values    unordered_set<int>::iterator pos;    for (pos = coll.begin(); pos != coll.end();)    {        if (*pos < 0)         {            coll.erase(pos++);        }        else        {            ++pos;        }    }    PRINT    unordered_multiset<int> coll2 = {1, 2, 3, 5, 7, 11, 13, 17, 19, 77};    coll2.insert({-7, 17, 33, -11, 17, 19, 1, 13});    PRINT2    system("pause");    return EXIT_SUCCESS;}