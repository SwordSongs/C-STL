#include <iostream>
#include <algorithm>
#include <functional>
#include <locale>
#include <string>
using namespace std;

template<typename T>
void print(T container, string info = "Container: ")
{
    for (const auto &i : container)
    {
        cout << i << " ";
    }

    cout << endl;
}

char myToUpper(char c)
{
    locale loc;
    return use_facet<ctype<char>>(loc).toupper(c);
}

void increase(int &count)
{
    ++count;
}

int main()
{
    string s("Internationalization");
    string sub("Nation");

    //search substring case insensitive
    string::iterator pos;
    pos = search(s.begin(), s.end(),
                 sub.begin(), sub.end(),
                 bind(equal_to<char>(),
                      bind(myToUpper, placeholders::_1),
                      bind(myToUpper, placeholders::_2)));

    if (pos != s.end())
    {
        cout << "\"" << sub << "\" is part of \"" << s << "\"" << endl;
    }
    else
    {
        cout << "\"" << sub << "\" is NOT part of \"" << s << "\"" << endl;
    }

    //bind by value
    int count = 0;
    bind(increase, count)();

    cout << "bind by value, count: " << count << endl;

    count = 10;
    bind(increase, ref(count))();
    cout << "bind by reference, count: " << count << endl;

    system("pause");
    return EXIT_SUCCESS;
}